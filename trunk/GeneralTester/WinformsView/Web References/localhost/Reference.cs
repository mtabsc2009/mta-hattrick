//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace HatTrick.Views.WinformsView.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GameSoap", Namespace="mta.hattrick")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CycleGame))]
    public partial class Game : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIsUserInLeagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLeagueExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamMatchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CyclesToListFinishedOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTeam1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewLeagueCyclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlayNextCycleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback buyPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeTeamFormationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePlayerPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MatchTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback dummyGetPaneltyOperationCompleted;
        
        private System.Threading.SendOrPostCallback dummyGetFreeKickOperationCompleted;
        
        private System.Threading.SendOrPostCallback dummyGetFouledOperationCompleted;
        
        private System.Threading.SendOrPostCallback dummyGetScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveStoryToDBOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeTeamTrainngTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrainTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrainAllTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback TeamExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCyclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumOfCyclesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameStoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameStory1OperationCompleted;
        
        private System.Threading.SendOrPostCallback UserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerNotForSellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerForSellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlayerForSell1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CanISellPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSellPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewLeagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLeagueOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateComputerTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesComputerTeamExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComputerTeamOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Game() {
            this.Url = global::HatTrick.Views.WinformsView.Properties.Settings.Default.WinformsView_localhost_Game;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getUserCompletedEventHandler getUserCompleted;
        
        /// <remarks/>
        public event getTeamCompletedEventHandler getTeamCompleted;
        
        /// <remarks/>
        public event getIsUserInLeagueCompletedEventHandler getIsUserInLeagueCompleted;
        
        /// <remarks/>
        public event getTeamsCompletedEventHandler getTeamsCompleted;
        
        /// <remarks/>
        public event getLeagueExistsCompletedEventHandler getLeagueExistsCompleted;
        
        /// <remarks/>
        public event GetTeamMatchesCompletedEventHandler GetTeamMatchesCompleted;
        
        /// <remarks/>
        public event CyclesToListFinishedCompletedEventHandler CyclesToListFinishedCompleted;
        
        /// <remarks/>
        public event CreateTeamCompletedEventHandler CreateTeamCompleted;
        
        /// <remarks/>
        public event CreateTeam1CompletedEventHandler CreateTeam1Completed;
        
        /// <remarks/>
        public event CreateNewLeagueCyclesCompletedEventHandler CreateNewLeagueCyclesCompleted;
        
        /// <remarks/>
        public event GetLeagueCompletedEventHandler GetLeagueCompleted;
        
        /// <remarks/>
        public event PlayNextCycleCompletedEventHandler PlayNextCycleCompleted;
        
        /// <remarks/>
        public event ResetCompletedEventHandler ResetCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetPlayerByIDCompletedEventHandler GetPlayerByIDCompleted;
        
        /// <remarks/>
        public event buyPlayerCompletedEventHandler buyPlayerCompleted;
        
        /// <remarks/>
        public event ChangeTeamFormationCompletedEventHandler ChangeTeamFormationCompleted;
        
        /// <remarks/>
        public event ChangePlayerPositionCompletedEventHandler ChangePlayerPositionCompleted;
        
        /// <remarks/>
        public event MatchTeamsCompletedEventHandler MatchTeamsCompleted;
        
        /// <remarks/>
        public event dummyGetPaneltyCompletedEventHandler dummyGetPaneltyCompleted;
        
        /// <remarks/>
        public event dummyGetFreeKickCompletedEventHandler dummyGetFreeKickCompleted;
        
        /// <remarks/>
        public event dummyGetFouledCompletedEventHandler dummyGetFouledCompleted;
        
        /// <remarks/>
        public event dummyGetScoreCompletedEventHandler dummyGetScoreCompleted;
        
        /// <remarks/>
        public event SaveStoryToDBCompletedEventHandler SaveStoryToDBCompleted;
        
        /// <remarks/>
        public event ChangeTeamTrainngTypeCompletedEventHandler ChangeTeamTrainngTypeCompleted;
        
        /// <remarks/>
        public event TrainTeamCompletedEventHandler TrainTeamCompleted;
        
        /// <remarks/>
        public event TrainAllTeamsCompletedEventHandler TrainAllTeamsCompleted;
        
        /// <remarks/>
        public event GetFormationsCompletedEventHandler GetFormationsCompleted;
        
        /// <remarks/>
        public event TeamExistsCompletedEventHandler TeamExistsCompleted;
        
        /// <remarks/>
        public event GetAllCyclesCompletedEventHandler GetAllCyclesCompleted;
        
        /// <remarks/>
        public event GetNumOfCyclesCompletedEventHandler GetNumOfCyclesCompleted;
        
        /// <remarks/>
        public event GetGameStoryCompletedEventHandler GetGameStoryCompleted;
        
        /// <remarks/>
        public event GetGameStory1CompletedEventHandler GetGameStory1Completed;
        
        /// <remarks/>
        public event UserExistsCompletedEventHandler UserExistsCompleted;
        
        /// <remarks/>
        public event GetPlayerNotForSellCompletedEventHandler GetPlayerNotForSellCompleted;
        
        /// <remarks/>
        public event GetPlayerForSellCompletedEventHandler GetPlayerForSellCompleted;
        
        /// <remarks/>
        public event GetPlayerForSell1CompletedEventHandler GetPlayerForSell1Completed;
        
        /// <remarks/>
        public event CanISellPlayerCompletedEventHandler CanISellPlayerCompleted;
        
        /// <remarks/>
        public event UpdateSellPlayerCompletedEventHandler UpdateSellPlayerCompleted;
        
        /// <remarks/>
        public event CreateNewLeagueCompletedEventHandler CreateNewLeagueCompleted;
        
        /// <remarks/>
        public event DeleteLeagueCompletedEventHandler DeleteLeagueCompleted;
        
        /// <remarks/>
        public event CreateComputerTeamCompletedEventHandler CreateComputerTeamCompleted;
        
        /// <remarks/>
        public event DoesComputerTeamExistCompletedEventHandler DoesComputerTeamExistCompleted;
        
        /// <remarks/>
        public event DeleteComputerTeamCompletedEventHandler DeleteComputerTeamCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/getUser", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User getUser() {
            object[] results = this.Invoke("getUser", new object[0]);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void getUserAsync() {
            this.getUserAsync(null);
        }
        
        /// <remarks/>
        public void getUserAsync(object userState) {
            if ((this.getUserOperationCompleted == null)) {
                this.getUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserOperationCompleted);
            }
            this.InvokeAsync("getUser", new object[0], this.getUserOperationCompleted, userState);
        }
        
        private void OngetUserOperationCompleted(object arg) {
            if ((this.getUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserCompleted(this, new getUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/getTeam", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Team getTeam() {
            object[] results = this.Invoke("getTeam", new object[0]);
            return ((Team)(results[0]));
        }
        
        /// <remarks/>
        public void getTeamAsync() {
            this.getTeamAsync(null);
        }
        
        /// <remarks/>
        public void getTeamAsync(object userState) {
            if ((this.getTeamOperationCompleted == null)) {
                this.getTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamOperationCompleted);
            }
            this.InvokeAsync("getTeam", new object[0], this.getTeamOperationCompleted, userState);
        }
        
        private void OngetTeamOperationCompleted(object arg) {
            if ((this.getTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamCompleted(this, new getTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/getIsUserInLeague", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getIsUserInLeague() {
            object[] results = this.Invoke("getIsUserInLeague", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getIsUserInLeagueAsync() {
            this.getIsUserInLeagueAsync(null);
        }
        
        /// <remarks/>
        public void getIsUserInLeagueAsync(object userState) {
            if ((this.getIsUserInLeagueOperationCompleted == null)) {
                this.getIsUserInLeagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIsUserInLeagueOperationCompleted);
            }
            this.InvokeAsync("getIsUserInLeague", new object[0], this.getIsUserInLeagueOperationCompleted, userState);
        }
        
        private void OngetIsUserInLeagueOperationCompleted(object arg) {
            if ((this.getIsUserInLeagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIsUserInLeagueCompleted(this, new getIsUserInLeagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/getTeams", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Team[] getTeams() {
            object[] results = this.Invoke("getTeams", new object[0]);
            return ((Team[])(results[0]));
        }
        
        /// <remarks/>
        public void getTeamsAsync() {
            this.getTeamsAsync(null);
        }
        
        /// <remarks/>
        public void getTeamsAsync(object userState) {
            if ((this.getTeamsOperationCompleted == null)) {
                this.getTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTeamsOperationCompleted);
            }
            this.InvokeAsync("getTeams", new object[0], this.getTeamsOperationCompleted, userState);
        }
        
        private void OngetTeamsOperationCompleted(object arg) {
            if ((this.getTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTeamsCompleted(this, new getTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/getLeagueExists", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getLeagueExists() {
            object[] results = this.Invoke("getLeagueExists", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getLeagueExistsAsync() {
            this.getLeagueExistsAsync(null);
        }
        
        /// <remarks/>
        public void getLeagueExistsAsync(object userState) {
            if ((this.getLeagueExistsOperationCompleted == null)) {
                this.getLeagueExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLeagueExistsOperationCompleted);
            }
            this.InvokeAsync("getLeagueExists", new object[0], this.getLeagueExistsOperationCompleted, userState);
        }
        
        private void OngetLeagueExistsOperationCompleted(object arg) {
            if ((this.getLeagueExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLeagueExistsCompleted(this, new getLeagueExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetTeamMatches", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CycleGameFinished[] GetTeamMatches(Team _Team) {
            object[] results = this.Invoke("GetTeamMatches", new object[] {
                        _Team});
            return ((CycleGameFinished[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamMatchesAsync(Team _Team) {
            this.GetTeamMatchesAsync(_Team, null);
        }
        
        /// <remarks/>
        public void GetTeamMatchesAsync(Team _Team, object userState) {
            if ((this.GetTeamMatchesOperationCompleted == null)) {
                this.GetTeamMatchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamMatchesOperationCompleted);
            }
            this.InvokeAsync("GetTeamMatches", new object[] {
                        _Team}, this.GetTeamMatchesOperationCompleted, userState);
        }
        
        private void OnGetTeamMatchesOperationCompleted(object arg) {
            if ((this.GetTeamMatchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamMatchesCompleted(this, new GetTeamMatchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CyclesToListFinished", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CycleGameFinished[] CyclesToListFinished(System.Data.DataTable dvAllCycles) {
            object[] results = this.Invoke("CyclesToListFinished", new object[] {
                        dvAllCycles});
            return ((CycleGameFinished[])(results[0]));
        }
        
        /// <remarks/>
        public void CyclesToListFinishedAsync(System.Data.DataTable dvAllCycles) {
            this.CyclesToListFinishedAsync(dvAllCycles, null);
        }
        
        /// <remarks/>
        public void CyclesToListFinishedAsync(System.Data.DataTable dvAllCycles, object userState) {
            if ((this.CyclesToListFinishedOperationCompleted == null)) {
                this.CyclesToListFinishedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCyclesToListFinishedOperationCompleted);
            }
            this.InvokeAsync("CyclesToListFinished", new object[] {
                        dvAllCycles}, this.CyclesToListFinishedOperationCompleted, userState);
        }
        
        private void OnCyclesToListFinishedOperationCompleted(object arg) {
            if ((this.CyclesToListFinishedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CyclesToListFinishedCompleted(this, new CyclesToListFinishedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateTeamWithName", RequestElementName="CreateTeamWithName", RequestNamespace="mta.hattrick", ResponseElementName="CreateTeamWithNameResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CreateTeamWithNameResult")]
        public Team CreateTeam(string strTeamName) {
            object[] results = this.Invoke("CreateTeam", new object[] {
                        strTeamName});
            return ((Team)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTeamAsync(string strTeamName) {
            this.CreateTeamAsync(strTeamName, null);
        }
        
        /// <remarks/>
        public void CreateTeamAsync(string strTeamName, object userState) {
            if ((this.CreateTeamOperationCompleted == null)) {
                this.CreateTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTeamOperationCompleted);
            }
            this.InvokeAsync("CreateTeam", new object[] {
                        strTeamName}, this.CreateTeamOperationCompleted, userState);
        }
        
        private void OnCreateTeamOperationCompleted(object arg) {
            if ((this.CreateTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTeamCompleted(this, new CreateTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="CreateTeam1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateTeamWithUser", RequestElementName="CreateTeamWithUser", RequestNamespace="mta.hattrick", ResponseElementName="CreateTeamWithUserResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CreateTeamWithUserResult")]
        public Team CreateTeam(User usrUser, string strTeamName) {
            object[] results = this.Invoke("CreateTeam1", new object[] {
                        usrUser,
                        strTeamName});
            return ((Team)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTeam1Async(User usrUser, string strTeamName) {
            this.CreateTeam1Async(usrUser, strTeamName, null);
        }
        
        /// <remarks/>
        public void CreateTeam1Async(User usrUser, string strTeamName, object userState) {
            if ((this.CreateTeam1OperationCompleted == null)) {
                this.CreateTeam1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTeam1OperationCompleted);
            }
            this.InvokeAsync("CreateTeam1", new object[] {
                        usrUser,
                        strTeamName}, this.CreateTeam1OperationCompleted, userState);
        }
        
        private void OnCreateTeam1OperationCompleted(object arg) {
            if ((this.CreateTeam1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTeam1Completed(this, new CreateTeam1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateNewLeagueCycles", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewLeagueCycles() {
            this.Invoke("CreateNewLeagueCycles", new object[0]);
        }
        
        /// <remarks/>
        public void CreateNewLeagueCyclesAsync() {
            this.CreateNewLeagueCyclesAsync(null);
        }
        
        /// <remarks/>
        public void CreateNewLeagueCyclesAsync(object userState) {
            if ((this.CreateNewLeagueCyclesOperationCompleted == null)) {
                this.CreateNewLeagueCyclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewLeagueCyclesOperationCompleted);
            }
            this.InvokeAsync("CreateNewLeagueCycles", new object[0], this.CreateNewLeagueCyclesOperationCompleted, userState);
        }
        
        private void OnCreateNewLeagueCyclesOperationCompleted(object arg) {
            if ((this.CreateNewLeagueCyclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewLeagueCyclesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetLeague", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLeague() {
            object[] results = this.Invoke("GetLeague", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeagueAsync() {
            this.GetLeagueAsync(null);
        }
        
        /// <remarks/>
        public void GetLeagueAsync(object userState) {
            if ((this.GetLeagueOperationCompleted == null)) {
                this.GetLeagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeagueOperationCompleted);
            }
            this.InvokeAsync("GetLeague", new object[0], this.GetLeagueOperationCompleted, userState);
        }
        
        private void OnGetLeagueOperationCompleted(object arg) {
            if ((this.GetLeagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeagueCompleted(this, new GetLeagueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/PlayNextCycle", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PlayNextCycle() {
            this.Invoke("PlayNextCycle", new object[0]);
        }
        
        /// <remarks/>
        public void PlayNextCycleAsync() {
            this.PlayNextCycleAsync(null);
        }
        
        /// <remarks/>
        public void PlayNextCycleAsync(object userState) {
            if ((this.PlayNextCycleOperationCompleted == null)) {
                this.PlayNextCycleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlayNextCycleOperationCompleted);
            }
            this.InvokeAsync("PlayNextCycle", new object[0], this.PlayNextCycleOperationCompleted, userState);
        }
        
        private void OnPlayNextCycleOperationCompleted(object arg) {
            if ((this.PlayNextCycleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlayNextCycleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/Reset", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Reset() {
            this.Invoke("Reset", new object[0]);
        }
        
        /// <remarks/>
        public void ResetAsync() {
            this.ResetAsync(null);
        }
        
        /// <remarks/>
        public void ResetAsync(object userState) {
            if ((this.ResetOperationCompleted == null)) {
                this.ResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetOperationCompleted);
            }
            this.InvokeAsync("Reset", new object[0], this.ResetOperationCompleted, userState);
        }
        
        private void OnResetOperationCompleted(object arg) {
            if ((this.ResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateUser", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUser(string strName, string strPass) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        strName,
                        strPass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(string strName, string strPass) {
            this.CreateUserAsync(strName, strPass, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(string strName, string strPass, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        strName,
                        strPass}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/Login", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User Login(string strUsername, string strPassword) {
            object[] results = this.Invoke("Login", new object[] {
                        strUsername,
                        strPassword});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string strUsername, string strPassword) {
            this.LoginAsync(strUsername, strPassword, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string strUsername, string strPassword, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        strUsername,
                        strPassword}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetPlayerByID", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Player GetPlayerByID(int nPlayerID) {
            object[] results = this.Invoke("GetPlayerByID", new object[] {
                        nPlayerID});
            return ((Player)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerByIDAsync(int nPlayerID) {
            this.GetPlayerByIDAsync(nPlayerID, null);
        }
        
        /// <remarks/>
        public void GetPlayerByIDAsync(int nPlayerID, object userState) {
            if ((this.GetPlayerByIDOperationCompleted == null)) {
                this.GetPlayerByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerByIDOperationCompleted);
            }
            this.InvokeAsync("GetPlayerByID", new object[] {
                        nPlayerID}, this.GetPlayerByIDOperationCompleted, userState);
        }
        
        private void OnGetPlayerByIDOperationCompleted(object arg) {
            if ((this.GetPlayerByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerByIDCompleted(this, new GetPlayerByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/buyPlayer", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool buyPlayer(Player playerToBuy) {
            object[] results = this.Invoke("buyPlayer", new object[] {
                        playerToBuy});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void buyPlayerAsync(Player playerToBuy) {
            this.buyPlayerAsync(playerToBuy, null);
        }
        
        /// <remarks/>
        public void buyPlayerAsync(Player playerToBuy, object userState) {
            if ((this.buyPlayerOperationCompleted == null)) {
                this.buyPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbuyPlayerOperationCompleted);
            }
            this.InvokeAsync("buyPlayer", new object[] {
                        playerToBuy}, this.buyPlayerOperationCompleted, userState);
        }
        
        private void OnbuyPlayerOperationCompleted(object arg) {
            if ((this.buyPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.buyPlayerCompleted(this, new buyPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/ChangeTeamFormation", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeTeamFormation(Team tMyTeam, string strFormation) {
            this.Invoke("ChangeTeamFormation", new object[] {
                        tMyTeam,
                        strFormation});
        }
        
        /// <remarks/>
        public void ChangeTeamFormationAsync(Team tMyTeam, string strFormation) {
            this.ChangeTeamFormationAsync(tMyTeam, strFormation, null);
        }
        
        /// <remarks/>
        public void ChangeTeamFormationAsync(Team tMyTeam, string strFormation, object userState) {
            if ((this.ChangeTeamFormationOperationCompleted == null)) {
                this.ChangeTeamFormationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeTeamFormationOperationCompleted);
            }
            this.InvokeAsync("ChangeTeamFormation", new object[] {
                        tMyTeam,
                        strFormation}, this.ChangeTeamFormationOperationCompleted, userState);
        }
        
        private void OnChangeTeamFormationOperationCompleted(object arg) {
            if ((this.ChangeTeamFormationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeTeamFormationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/ChangePlayerPosition", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePlayerPosition(Player plrToChange, Player plrChangedPos) {
            this.Invoke("ChangePlayerPosition", new object[] {
                        plrToChange,
                        plrChangedPos});
        }
        
        /// <remarks/>
        public void ChangePlayerPositionAsync(Player plrToChange, Player plrChangedPos) {
            this.ChangePlayerPositionAsync(plrToChange, plrChangedPos, null);
        }
        
        /// <remarks/>
        public void ChangePlayerPositionAsync(Player plrToChange, Player plrChangedPos, object userState) {
            if ((this.ChangePlayerPositionOperationCompleted == null)) {
                this.ChangePlayerPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePlayerPositionOperationCompleted);
            }
            this.InvokeAsync("ChangePlayerPosition", new object[] {
                        plrToChange,
                        plrChangedPos}, this.ChangePlayerPositionOperationCompleted, userState);
        }
        
        private void OnChangePlayerPositionOperationCompleted(object arg) {
            if ((this.ChangePlayerPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePlayerPositionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/MatchTeams", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GameStory MatchTeams(string strHomeTeam, string strAwayTeam) {
            object[] results = this.Invoke("MatchTeams", new object[] {
                        strHomeTeam,
                        strAwayTeam});
            return ((GameStory)(results[0]));
        }
        
        /// <remarks/>
        public void MatchTeamsAsync(string strHomeTeam, string strAwayTeam) {
            this.MatchTeamsAsync(strHomeTeam, strAwayTeam, null);
        }
        
        /// <remarks/>
        public void MatchTeamsAsync(string strHomeTeam, string strAwayTeam, object userState) {
            if ((this.MatchTeamsOperationCompleted == null)) {
                this.MatchTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchTeamsOperationCompleted);
            }
            this.InvokeAsync("MatchTeams", new object[] {
                        strHomeTeam,
                        strAwayTeam}, this.MatchTeamsOperationCompleted, userState);
        }
        
        private void OnMatchTeamsOperationCompleted(object arg) {
            if ((this.MatchTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatchTeamsCompleted(this, new MatchTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/dummyGetPanelty", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PaneltyEvent dummyGetPanelty() {
            object[] results = this.Invoke("dummyGetPanelty", new object[0]);
            return ((PaneltyEvent)(results[0]));
        }
        
        /// <remarks/>
        public void dummyGetPaneltyAsync() {
            this.dummyGetPaneltyAsync(null);
        }
        
        /// <remarks/>
        public void dummyGetPaneltyAsync(object userState) {
            if ((this.dummyGetPaneltyOperationCompleted == null)) {
                this.dummyGetPaneltyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndummyGetPaneltyOperationCompleted);
            }
            this.InvokeAsync("dummyGetPanelty", new object[0], this.dummyGetPaneltyOperationCompleted, userState);
        }
        
        private void OndummyGetPaneltyOperationCompleted(object arg) {
            if ((this.dummyGetPaneltyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dummyGetPaneltyCompleted(this, new dummyGetPaneltyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/dummyGetFreeKick", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FreeKickEvent dummyGetFreeKick() {
            object[] results = this.Invoke("dummyGetFreeKick", new object[0]);
            return ((FreeKickEvent)(results[0]));
        }
        
        /// <remarks/>
        public void dummyGetFreeKickAsync() {
            this.dummyGetFreeKickAsync(null);
        }
        
        /// <remarks/>
        public void dummyGetFreeKickAsync(object userState) {
            if ((this.dummyGetFreeKickOperationCompleted == null)) {
                this.dummyGetFreeKickOperationCompleted = new System.Threading.SendOrPostCallback(this.OndummyGetFreeKickOperationCompleted);
            }
            this.InvokeAsync("dummyGetFreeKick", new object[0], this.dummyGetFreeKickOperationCompleted, userState);
        }
        
        private void OndummyGetFreeKickOperationCompleted(object arg) {
            if ((this.dummyGetFreeKickCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dummyGetFreeKickCompleted(this, new dummyGetFreeKickCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/dummyGetFouled", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FouledEvent dummyGetFouled() {
            object[] results = this.Invoke("dummyGetFouled", new object[0]);
            return ((FouledEvent)(results[0]));
        }
        
        /// <remarks/>
        public void dummyGetFouledAsync() {
            this.dummyGetFouledAsync(null);
        }
        
        /// <remarks/>
        public void dummyGetFouledAsync(object userState) {
            if ((this.dummyGetFouledOperationCompleted == null)) {
                this.dummyGetFouledOperationCompleted = new System.Threading.SendOrPostCallback(this.OndummyGetFouledOperationCompleted);
            }
            this.InvokeAsync("dummyGetFouled", new object[0], this.dummyGetFouledOperationCompleted, userState);
        }
        
        private void OndummyGetFouledOperationCompleted(object arg) {
            if ((this.dummyGetFouledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dummyGetFouledCompleted(this, new dummyGetFouledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/dummyGetScore", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ScoreEvent dummyGetScore() {
            object[] results = this.Invoke("dummyGetScore", new object[0]);
            return ((ScoreEvent)(results[0]));
        }
        
        /// <remarks/>
        public void dummyGetScoreAsync() {
            this.dummyGetScoreAsync(null);
        }
        
        /// <remarks/>
        public void dummyGetScoreAsync(object userState) {
            if ((this.dummyGetScoreOperationCompleted == null)) {
                this.dummyGetScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OndummyGetScoreOperationCompleted);
            }
            this.InvokeAsync("dummyGetScore", new object[0], this.dummyGetScoreOperationCompleted, userState);
        }
        
        private void OndummyGetScoreOperationCompleted(object arg) {
            if ((this.dummyGetScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dummyGetScoreCompleted(this, new dummyGetScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/SaveStoryToDB", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveStoryToDB(GameStory gsNewGame) {
            object[] results = this.Invoke("SaveStoryToDB", new object[] {
                        gsNewGame});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveStoryToDBAsync(GameStory gsNewGame) {
            this.SaveStoryToDBAsync(gsNewGame, null);
        }
        
        /// <remarks/>
        public void SaveStoryToDBAsync(GameStory gsNewGame, object userState) {
            if ((this.SaveStoryToDBOperationCompleted == null)) {
                this.SaveStoryToDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveStoryToDBOperationCompleted);
            }
            this.InvokeAsync("SaveStoryToDB", new object[] {
                        gsNewGame}, this.SaveStoryToDBOperationCompleted, userState);
        }
        
        private void OnSaveStoryToDBOperationCompleted(object arg) {
            if ((this.SaveStoryToDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveStoryToDBCompleted(this, new SaveStoryToDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/ChangeTeamTrainngType", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeTeamTrainngType(TrainingType ttTeamTrainingType) {
            this.Invoke("ChangeTeamTrainngType", new object[] {
                        ttTeamTrainingType});
        }
        
        /// <remarks/>
        public void ChangeTeamTrainngTypeAsync(TrainingType ttTeamTrainingType) {
            this.ChangeTeamTrainngTypeAsync(ttTeamTrainingType, null);
        }
        
        /// <remarks/>
        public void ChangeTeamTrainngTypeAsync(TrainingType ttTeamTrainingType, object userState) {
            if ((this.ChangeTeamTrainngTypeOperationCompleted == null)) {
                this.ChangeTeamTrainngTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeTeamTrainngTypeOperationCompleted);
            }
            this.InvokeAsync("ChangeTeamTrainngType", new object[] {
                        ttTeamTrainingType}, this.ChangeTeamTrainngTypeOperationCompleted, userState);
        }
        
        private void OnChangeTeamTrainngTypeOperationCompleted(object arg) {
            if ((this.ChangeTeamTrainngTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeTeamTrainngTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/TrainTeam", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TrainTeam(Team tmTeamToTrain) {
            this.Invoke("TrainTeam", new object[] {
                        tmTeamToTrain});
        }
        
        /// <remarks/>
        public void TrainTeamAsync(Team tmTeamToTrain) {
            this.TrainTeamAsync(tmTeamToTrain, null);
        }
        
        /// <remarks/>
        public void TrainTeamAsync(Team tmTeamToTrain, object userState) {
            if ((this.TrainTeamOperationCompleted == null)) {
                this.TrainTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrainTeamOperationCompleted);
            }
            this.InvokeAsync("TrainTeam", new object[] {
                        tmTeamToTrain}, this.TrainTeamOperationCompleted, userState);
        }
        
        private void OnTrainTeamOperationCompleted(object arg) {
            if ((this.TrainTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrainTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/TrainAllTeams", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TrainAllTeams(int nNumOfTrainings) {
            this.Invoke("TrainAllTeams", new object[] {
                        nNumOfTrainings});
        }
        
        /// <remarks/>
        public void TrainAllTeamsAsync(int nNumOfTrainings) {
            this.TrainAllTeamsAsync(nNumOfTrainings, null);
        }
        
        /// <remarks/>
        public void TrainAllTeamsAsync(int nNumOfTrainings, object userState) {
            if ((this.TrainAllTeamsOperationCompleted == null)) {
                this.TrainAllTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrainAllTeamsOperationCompleted);
            }
            this.InvokeAsync("TrainAllTeams", new object[] {
                        nNumOfTrainings}, this.TrainAllTeamsOperationCompleted, userState);
        }
        
        private void OnTrainAllTeamsOperationCompleted(object arg) {
            if ((this.TrainAllTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrainAllTeamsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetFormations", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFormations() {
            object[] results = this.Invoke("GetFormations", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormationsAsync() {
            this.GetFormationsAsync(null);
        }
        
        /// <remarks/>
        public void GetFormationsAsync(object userState) {
            if ((this.GetFormationsOperationCompleted == null)) {
                this.GetFormationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormationsOperationCompleted);
            }
            this.InvokeAsync("GetFormations", new object[0], this.GetFormationsOperationCompleted, userState);
        }
        
        private void OnGetFormationsOperationCompleted(object arg) {
            if ((this.GetFormationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormationsCompleted(this, new GetFormationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/TeamExists", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TeamExists(string strTeamName) {
            object[] results = this.Invoke("TeamExists", new object[] {
                        strTeamName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TeamExistsAsync(string strTeamName) {
            this.TeamExistsAsync(strTeamName, null);
        }
        
        /// <remarks/>
        public void TeamExistsAsync(string strTeamName, object userState) {
            if ((this.TeamExistsOperationCompleted == null)) {
                this.TeamExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTeamExistsOperationCompleted);
            }
            this.InvokeAsync("TeamExists", new object[] {
                        strTeamName}, this.TeamExistsOperationCompleted, userState);
        }
        
        private void OnTeamExistsOperationCompleted(object arg) {
            if ((this.TeamExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TeamExistsCompleted(this, new TeamExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetAllCycles", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllCycles() {
            object[] results = this.Invoke("GetAllCycles", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCyclesAsync() {
            this.GetAllCyclesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCyclesAsync(object userState) {
            if ((this.GetAllCyclesOperationCompleted == null)) {
                this.GetAllCyclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCyclesOperationCompleted);
            }
            this.InvokeAsync("GetAllCycles", new object[0], this.GetAllCyclesOperationCompleted, userState);
        }
        
        private void OnGetAllCyclesOperationCompleted(object arg) {
            if ((this.GetAllCyclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCyclesCompleted(this, new GetAllCyclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetNumOfCycles", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNumOfCycles() {
            object[] results = this.Invoke("GetNumOfCycles", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumOfCyclesAsync() {
            this.GetNumOfCyclesAsync(null);
        }
        
        /// <remarks/>
        public void GetNumOfCyclesAsync(object userState) {
            if ((this.GetNumOfCyclesOperationCompleted == null)) {
                this.GetNumOfCyclesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumOfCyclesOperationCompleted);
            }
            this.InvokeAsync("GetNumOfCycles", new object[0], this.GetNumOfCyclesOperationCompleted, userState);
        }
        
        private void OnGetNumOfCyclesOperationCompleted(object arg) {
            if ((this.GetNumOfCyclesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumOfCyclesCompleted(this, new GetNumOfCyclesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetGameStoryWithStringID", RequestElementName="GetGameStoryWithStringID", RequestNamespace="mta.hattrick", ResponseElementName="GetGameStoryWithStringIDResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetGameStoryWithStringIDResult")]
        public GameStory GetGameStory(string strGameID) {
            object[] results = this.Invoke("GetGameStory", new object[] {
                        strGameID});
            return ((GameStory)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameStoryAsync(string strGameID) {
            this.GetGameStoryAsync(strGameID, null);
        }
        
        /// <remarks/>
        public void GetGameStoryAsync(string strGameID, object userState) {
            if ((this.GetGameStoryOperationCompleted == null)) {
                this.GetGameStoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameStoryOperationCompleted);
            }
            this.InvokeAsync("GetGameStory", new object[] {
                        strGameID}, this.GetGameStoryOperationCompleted, userState);
        }
        
        private void OnGetGameStoryOperationCompleted(object arg) {
            if ((this.GetGameStoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameStoryCompleted(this, new GetGameStoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetGameStory1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetGameStoryWithIntegerID", RequestElementName="GetGameStoryWithIntegerID", RequestNamespace="mta.hattrick", ResponseElementName="GetGameStoryWithIntegerIDResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetGameStoryWithIntegerIDResult")]
        public GameStory GetGameStory(int nGameToShow) {
            object[] results = this.Invoke("GetGameStory1", new object[] {
                        nGameToShow});
            return ((GameStory)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameStory1Async(int nGameToShow) {
            this.GetGameStory1Async(nGameToShow, null);
        }
        
        /// <remarks/>
        public void GetGameStory1Async(int nGameToShow, object userState) {
            if ((this.GetGameStory1OperationCompleted == null)) {
                this.GetGameStory1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameStory1OperationCompleted);
            }
            this.InvokeAsync("GetGameStory1", new object[] {
                        nGameToShow}, this.GetGameStory1OperationCompleted, userState);
        }
        
        private void OnGetGameStory1OperationCompleted(object arg) {
            if ((this.GetGameStory1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameStory1Completed(this, new GetGameStory1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/UserExists", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserExists(string strUsername) {
            object[] results = this.Invoke("UserExists", new object[] {
                        strUsername});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserExistsAsync(string strUsername) {
            this.UserExistsAsync(strUsername, null);
        }
        
        /// <remarks/>
        public void UserExistsAsync(string strUsername, object userState) {
            if ((this.UserExistsOperationCompleted == null)) {
                this.UserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserExistsOperationCompleted);
            }
            this.InvokeAsync("UserExists", new object[] {
                        strUsername}, this.UserExistsOperationCompleted, userState);
        }
        
        private void OnUserExistsOperationCompleted(object arg) {
            if ((this.UserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserExistsCompleted(this, new UserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetPlayerNotForSell", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Player[] GetPlayerNotForSell(Team tMyTeam) {
            object[] results = this.Invoke("GetPlayerNotForSell", new object[] {
                        tMyTeam});
            return ((Player[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerNotForSellAsync(Team tMyTeam) {
            this.GetPlayerNotForSellAsync(tMyTeam, null);
        }
        
        /// <remarks/>
        public void GetPlayerNotForSellAsync(Team tMyTeam, object userState) {
            if ((this.GetPlayerNotForSellOperationCompleted == null)) {
                this.GetPlayerNotForSellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerNotForSellOperationCompleted);
            }
            this.InvokeAsync("GetPlayerNotForSell", new object[] {
                        tMyTeam}, this.GetPlayerNotForSellOperationCompleted, userState);
        }
        
        private void OnGetPlayerNotForSellOperationCompleted(object arg) {
            if ((this.GetPlayerNotForSellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerNotForSellCompleted(this, new GetPlayerNotForSellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetPlayerForSellWithTeamObject", RequestElementName="GetPlayerForSellWithTeamObject", RequestNamespace="mta.hattrick", ResponseElementName="GetPlayerForSellWithTeamObjectResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetPlayerForSellWithTeamObjectResult")]
        public Player[] GetPlayerForSell(Team tMyTeam) {
            object[] results = this.Invoke("GetPlayerForSell", new object[] {
                        tMyTeam});
            return ((Player[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerForSellAsync(Team tMyTeam) {
            this.GetPlayerForSellAsync(tMyTeam, null);
        }
        
        /// <remarks/>
        public void GetPlayerForSellAsync(Team tMyTeam, object userState) {
            if ((this.GetPlayerForSellOperationCompleted == null)) {
                this.GetPlayerForSellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerForSellOperationCompleted);
            }
            this.InvokeAsync("GetPlayerForSell", new object[] {
                        tMyTeam}, this.GetPlayerForSellOperationCompleted, userState);
        }
        
        private void OnGetPlayerForSellOperationCompleted(object arg) {
            if ((this.GetPlayerForSellCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerForSellCompleted(this, new GetPlayerForSellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetPlayerForSell1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/GetPlayerForSellWithTeamName", RequestElementName="GetPlayerForSellWithTeamName", RequestNamespace="mta.hattrick", ResponseElementName="GetPlayerForSellWithTeamNameResponse", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetPlayerForSellWithTeamNameResult")]
        public System.Data.DataTable GetPlayerForSell(string strMyTeam) {
            object[] results = this.Invoke("GetPlayerForSell1", new object[] {
                        strMyTeam});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlayerForSell1Async(string strMyTeam) {
            this.GetPlayerForSell1Async(strMyTeam, null);
        }
        
        /// <remarks/>
        public void GetPlayerForSell1Async(string strMyTeam, object userState) {
            if ((this.GetPlayerForSell1OperationCompleted == null)) {
                this.GetPlayerForSell1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlayerForSell1OperationCompleted);
            }
            this.InvokeAsync("GetPlayerForSell1", new object[] {
                        strMyTeam}, this.GetPlayerForSell1OperationCompleted, userState);
        }
        
        private void OnGetPlayerForSell1OperationCompleted(object arg) {
            if ((this.GetPlayerForSell1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlayerForSell1Completed(this, new GetPlayerForSell1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CanISellPlayer", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanISellPlayer(string iD) {
            object[] results = this.Invoke("CanISellPlayer", new object[] {
                        iD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanISellPlayerAsync(string iD) {
            this.CanISellPlayerAsync(iD, null);
        }
        
        /// <remarks/>
        public void CanISellPlayerAsync(string iD, object userState) {
            if ((this.CanISellPlayerOperationCompleted == null)) {
                this.CanISellPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanISellPlayerOperationCompleted);
            }
            this.InvokeAsync("CanISellPlayer", new object[] {
                        iD}, this.CanISellPlayerOperationCompleted, userState);
        }
        
        private void OnCanISellPlayerOperationCompleted(object arg) {
            if ((this.CanISellPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanISellPlayerCompleted(this, new CanISellPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/UpdateSellPlayer", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSellPlayer(string strPlayerId, int intCost) {
            this.Invoke("UpdateSellPlayer", new object[] {
                        strPlayerId,
                        intCost});
        }
        
        /// <remarks/>
        public void UpdateSellPlayerAsync(string strPlayerId, int intCost) {
            this.UpdateSellPlayerAsync(strPlayerId, intCost, null);
        }
        
        /// <remarks/>
        public void UpdateSellPlayerAsync(string strPlayerId, int intCost, object userState) {
            if ((this.UpdateSellPlayerOperationCompleted == null)) {
                this.UpdateSellPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSellPlayerOperationCompleted);
            }
            this.InvokeAsync("UpdateSellPlayer", new object[] {
                        strPlayerId,
                        intCost}, this.UpdateSellPlayerOperationCompleted, userState);
        }
        
        private void OnUpdateSellPlayerOperationCompleted(object arg) {
            if ((this.UpdateSellPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSellPlayerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateNewLeague", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateNewLeague() {
            this.Invoke("CreateNewLeague", new object[0]);
        }
        
        /// <remarks/>
        public void CreateNewLeagueAsync() {
            this.CreateNewLeagueAsync(null);
        }
        
        /// <remarks/>
        public void CreateNewLeagueAsync(object userState) {
            if ((this.CreateNewLeagueOperationCompleted == null)) {
                this.CreateNewLeagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewLeagueOperationCompleted);
            }
            this.InvokeAsync("CreateNewLeague", new object[0], this.CreateNewLeagueOperationCompleted, userState);
        }
        
        private void OnCreateNewLeagueOperationCompleted(object arg) {
            if ((this.CreateNewLeagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewLeagueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/DeleteLeague", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteLeague() {
            this.Invoke("DeleteLeague", new object[0]);
        }
        
        /// <remarks/>
        public void DeleteLeagueAsync() {
            this.DeleteLeagueAsync(null);
        }
        
        /// <remarks/>
        public void DeleteLeagueAsync(object userState) {
            if ((this.DeleteLeagueOperationCompleted == null)) {
                this.DeleteLeagueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLeagueOperationCompleted);
            }
            this.InvokeAsync("DeleteLeague", new object[0], this.DeleteLeagueOperationCompleted, userState);
        }
        
        private void OnDeleteLeagueOperationCompleted(object arg) {
            if ((this.DeleteLeagueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLeagueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/CreateComputerTeam", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateComputerTeam() {
            this.Invoke("CreateComputerTeam", new object[0]);
        }
        
        /// <remarks/>
        public void CreateComputerTeamAsync() {
            this.CreateComputerTeamAsync(null);
        }
        
        /// <remarks/>
        public void CreateComputerTeamAsync(object userState) {
            if ((this.CreateComputerTeamOperationCompleted == null)) {
                this.CreateComputerTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateComputerTeamOperationCompleted);
            }
            this.InvokeAsync("CreateComputerTeam", new object[0], this.CreateComputerTeamOperationCompleted, userState);
        }
        
        private void OnCreateComputerTeamOperationCompleted(object arg) {
            if ((this.CreateComputerTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateComputerTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/DoesComputerTeamExist", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesComputerTeamExist() {
            object[] results = this.Invoke("DoesComputerTeamExist", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesComputerTeamExistAsync() {
            this.DoesComputerTeamExistAsync(null);
        }
        
        /// <remarks/>
        public void DoesComputerTeamExistAsync(object userState) {
            if ((this.DoesComputerTeamExistOperationCompleted == null)) {
                this.DoesComputerTeamExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesComputerTeamExistOperationCompleted);
            }
            this.InvokeAsync("DoesComputerTeamExist", new object[0], this.DoesComputerTeamExistOperationCompleted, userState);
        }
        
        private void OnDoesComputerTeamExistOperationCompleted(object arg) {
            if ((this.DoesComputerTeamExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesComputerTeamExistCompleted(this, new DoesComputerTeamExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("mta.hattrick/DeleteComputerTeam", RequestNamespace="mta.hattrick", ResponseNamespace="mta.hattrick", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteComputerTeam() {
            this.Invoke("DeleteComputerTeam", new object[0]);
        }
        
        /// <remarks/>
        public void DeleteComputerTeamAsync() {
            this.DeleteComputerTeamAsync(null);
        }
        
        /// <remarks/>
        public void DeleteComputerTeamAsync(object userState) {
            if ((this.DeleteComputerTeamOperationCompleted == null)) {
                this.DeleteComputerTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComputerTeamOperationCompleted);
            }
            this.InvokeAsync("DeleteComputerTeam", new object[0], this.DeleteComputerTeamOperationCompleted, userState);
        }
        
        private void OnDeleteComputerTeamOperationCompleted(object arg) {
            if ((this.DeleteComputerTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComputerTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class User {
        
        private string usernameField;
        
        private string passwordField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class TeamFormation {
        
        private int defenceField;
        
        private int middleFieldField;
        
        private int offenceField;
        
        /// <remarks/>
        public int Defence {
            get {
                return this.defenceField;
            }
            set {
                this.defenceField = value;
            }
        }
        
        /// <remarks/>
        public int MiddleField {
            get {
                return this.middleFieldField;
            }
            set {
                this.middleFieldField = value;
            }
        }
        
        /// <remarks/>
        public int Offence {
            get {
                return this.offenceField;
            }
            set {
                this.offenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class TeamGameData {
        
        private Team teamField;
        
        private bool isTeamMiddleMethodField;
        
        private TeamFormation formationField;
        
        private int offenceGradeField;
        
        private int midFieldGradeField;
        
        private int defenceGradeField;
        
        private int keepingGradeField;
        
        private int setPiecesGradeField;
        
        /// <remarks/>
        public Team Team {
            get {
                return this.teamField;
            }
            set {
                this.teamField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTeamMiddleMethod {
            get {
                return this.isTeamMiddleMethodField;
            }
            set {
                this.isTeamMiddleMethodField = value;
            }
        }
        
        /// <remarks/>
        public TeamFormation Formation {
            get {
                return this.formationField;
            }
            set {
                this.formationField = value;
            }
        }
        
        /// <remarks/>
        public int OffenceGrade {
            get {
                return this.offenceGradeField;
            }
            set {
                this.offenceGradeField = value;
            }
        }
        
        /// <remarks/>
        public int MidFieldGrade {
            get {
                return this.midFieldGradeField;
            }
            set {
                this.midFieldGradeField = value;
            }
        }
        
        /// <remarks/>
        public int DefenceGrade {
            get {
                return this.defenceGradeField;
            }
            set {
                this.defenceGradeField = value;
            }
        }
        
        /// <remarks/>
        public int KeepingGrade {
            get {
                return this.keepingGradeField;
            }
            set {
                this.keepingGradeField = value;
            }
        }
        
        /// <remarks/>
        public int SetPiecesGrade {
            get {
                return this.setPiecesGradeField;
            }
            set {
                this.setPiecesGradeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class Team {
        
        private Player[] playersField;
        
        private string nameField;
        
        private string formationField;
        
        private int positionField;
        
        private TrainingType teamTrainingTypeField;
        
        private string ownerField;
        
        private System.DateTime creationDateField;
        
        private int teamCashField;
        
        /// <remarks/>
        public Player[] Players {
            get {
                return this.playersField;
            }
            set {
                this.playersField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Formation {
            get {
                return this.formationField;
            }
            set {
                this.formationField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public TrainingType TeamTrainingType {
            get {
                return this.teamTrainingTypeField;
            }
            set {
                this.teamTrainingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public int TeamCash {
            get {
                return this.teamCashField;
            }
            set {
                this.teamCashField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class Player {
        
        private int idField;
        
        private string nameField;
        
        private int ageField;
        
        private string teamNameField;
        
        private float keeperValField;
        
        private float defendingValField;
        
        private float playmakingValField;
        
        private float wingerValField;
        
        private float passingValField;
        
        private float scoringValField;
        
        private float setPiecesValField;
        
        private int positionField;
        
        private System.Nullable<int> playerCostField;
        
        private bool isForSaleField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string TeamName {
            get {
                return this.teamNameField;
            }
            set {
                this.teamNameField = value;
            }
        }
        
        /// <remarks/>
        public float KeeperVal {
            get {
                return this.keeperValField;
            }
            set {
                this.keeperValField = value;
            }
        }
        
        /// <remarks/>
        public float DefendingVal {
            get {
                return this.defendingValField;
            }
            set {
                this.defendingValField = value;
            }
        }
        
        /// <remarks/>
        public float PlaymakingVal {
            get {
                return this.playmakingValField;
            }
            set {
                this.playmakingValField = value;
            }
        }
        
        /// <remarks/>
        public float WingerVal {
            get {
                return this.wingerValField;
            }
            set {
                this.wingerValField = value;
            }
        }
        
        /// <remarks/>
        public float PassingVal {
            get {
                return this.passingValField;
            }
            set {
                this.passingValField = value;
            }
        }
        
        /// <remarks/>
        public float ScoringVal {
            get {
                return this.scoringValField;
            }
            set {
                this.scoringValField = value;
            }
        }
        
        /// <remarks/>
        public float SetPiecesVal {
            get {
                return this.setPiecesValField;
            }
            set {
                this.setPiecesValField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PlayerCost {
            get {
                return this.playerCostField;
            }
            set {
                this.playerCostField = value;
            }
        }
        
        /// <remarks/>
        public bool IsForSale {
            get {
                return this.isForSaleField;
            }
            set {
                this.isForSaleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public enum TrainingType {
        
        /// <remarks/>
        ATTACK,
        
        /// <remarks/>
        DEFENCE,
        
        /// <remarks/>
        WING,
        
        /// <remarks/>
        PLAYMAKING,
        
        /// <remarks/>
        SETPIECES,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScoreEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FouledEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FreeKickEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PaneltyEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MissedFouledEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FailedEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MissedEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoppedEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public abstract partial class GameEvent {
        
        private int minuteField;
        
        private Team teamAttackingField;
        
        private Player actorField;
        
        /// <remarks/>
        public int Minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
            }
        }
        
        /// <remarks/>
        public Team teamAttacking {
            get {
                return this.teamAttackingField;
            }
            set {
                this.teamAttackingField = value;
            }
        }
        
        /// <remarks/>
        public Player Actor {
            get {
                return this.actorField;
            }
            set {
                this.actorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class ScoreEvent : GameEvent {
        
        private bool bShowInSummaryField;
        
        /// <remarks/>
        public bool bShowInSummary {
            get {
                return this.bShowInSummaryField;
            }
            set {
                this.bShowInSummaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FreeKickEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PaneltyEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MissedFouledEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class FouledEvent : GameEvent {
        
        private Player foulistField;
        
        private PaneltyCard ptCardField;
        
        private Team bScoredField;
        
        /// <remarks/>
        public Player Foulist {
            get {
                return this.foulistField;
            }
            set {
                this.foulistField = value;
            }
        }
        
        /// <remarks/>
        public PaneltyCard ptCard {
            get {
                return this.ptCardField;
            }
            set {
                this.ptCardField = value;
            }
        }
        
        /// <remarks/>
        public Team bScored {
            get {
                return this.bScoredField;
            }
            set {
                this.bScoredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public enum PaneltyCard {
        
        /// <remarks/>
        ptNoCard,
        
        /// <remarks/>
        ptNone,
        
        /// <remarks/>
        ptYellow,
        
        /// <remarks/>
        ptRed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class FreeKickEvent : FouledEvent {
        
        private Player shooterField;
        
        /// <remarks/>
        public Player Shooter {
            get {
                return this.shooterField;
            }
            set {
                this.shooterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class PaneltyEvent : FouledEvent {
        
        private Player shooterField;
        
        /// <remarks/>
        public Player Shooter {
            get {
                return this.shooterField;
            }
            set {
                this.shooterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class MissedFouledEvent : FouledEvent {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MissedEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StoppedEvent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public abstract partial class FailedEvent : GameEvent {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class MissedEvent : FailedEvent {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class StoppedEvent : FailedEvent {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class GameStory {
        
        private Team winnerField;
        
        private int awayScoreField;
        
        private int homeScoreField;
        
        private GameEvent[] gameEventsField;
        
        private int totalEventsField;
        
        private int homeTeamEventsField;
        
        private TeamGameData homeTeamField;
        
        private TeamGameData awayTeamField;
        
        private System.DateTime gameDateField;
        
        private int watchersField;
        
        private string weatherField;
        
        /// <remarks/>
        public Team Winner {
            get {
                return this.winnerField;
            }
            set {
                this.winnerField = value;
            }
        }
        
        /// <remarks/>
        public int AwayScore {
            get {
                return this.awayScoreField;
            }
            set {
                this.awayScoreField = value;
            }
        }
        
        /// <remarks/>
        public int HomeScore {
            get {
                return this.homeScoreField;
            }
            set {
                this.homeScoreField = value;
            }
        }
        
        /// <remarks/>
        public GameEvent[] GameEvents {
            get {
                return this.gameEventsField;
            }
            set {
                this.gameEventsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalEvents {
            get {
                return this.totalEventsField;
            }
            set {
                this.totalEventsField = value;
            }
        }
        
        /// <remarks/>
        public int HomeTeamEvents {
            get {
                return this.homeTeamEventsField;
            }
            set {
                this.homeTeamEventsField = value;
            }
        }
        
        /// <remarks/>
        public TeamGameData HomeTeam {
            get {
                return this.homeTeamField;
            }
            set {
                this.homeTeamField = value;
            }
        }
        
        /// <remarks/>
        public TeamGameData AwayTeam {
            get {
                return this.awayTeamField;
            }
            set {
                this.awayTeamField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime GameDate {
            get {
                return this.gameDateField;
            }
            set {
                this.gameDateField = value;
            }
        }
        
        /// <remarks/>
        public int Watchers {
            get {
                return this.watchersField;
            }
            set {
                this.watchersField = value;
            }
        }
        
        /// <remarks/>
        public string Weather {
            get {
                return this.weatherField;
            }
            set {
                this.weatherField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CycleGameFinished))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class CycleGame {
        
        private int cycleNumField;
        
        private string homeTeamField;
        
        private string awayTeamField;
        
        private int gameIDField;
        
        private System.DateTime cycleDateField;
        
        /// <remarks/>
        public int CycleNum {
            get {
                return this.cycleNumField;
            }
            set {
                this.cycleNumField = value;
            }
        }
        
        /// <remarks/>
        public string HomeTeam {
            get {
                return this.homeTeamField;
            }
            set {
                this.homeTeamField = value;
            }
        }
        
        /// <remarks/>
        public string AwayTeam {
            get {
                return this.awayTeamField;
            }
            set {
                this.awayTeamField = value;
            }
        }
        
        /// <remarks/>
        public int GameID {
            get {
                return this.gameIDField;
            }
            set {
                this.gameIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CycleDate {
            get {
                return this.cycleDateField;
            }
            set {
                this.cycleDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="mta.hattrick")]
    public partial class CycleGameFinished : CycleGame {
        
        private int homeScoreField;
        
        private int awayScoreField;
        
        /// <remarks/>
        public int HomeScore {
            get {
                return this.homeScoreField;
            }
            set {
                this.homeScoreField = value;
            }
        }
        
        /// <remarks/>
        public int AwayScore {
            get {
                return this.awayScoreField;
            }
            set {
                this.awayScoreField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getUserCompletedEventHandler(object sender, getUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTeamCompletedEventHandler(object sender, getTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getIsUserInLeagueCompletedEventHandler(object sender, getIsUserInLeagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIsUserInLeagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIsUserInLeagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getTeamsCompletedEventHandler(object sender, getTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getLeagueExistsCompletedEventHandler(object sender, getLeagueExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLeagueExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLeagueExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetTeamMatchesCompletedEventHandler(object sender, GetTeamMatchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamMatchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamMatchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CycleGameFinished[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CycleGameFinished[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CyclesToListFinishedCompletedEventHandler(object sender, CyclesToListFinishedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CyclesToListFinishedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CyclesToListFinishedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CycleGameFinished[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CycleGameFinished[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateTeamCompletedEventHandler(object sender, CreateTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateTeam1CompletedEventHandler(object sender, CreateTeam1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTeam1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTeam1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Team Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Team)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateNewLeagueCyclesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetLeagueCompletedEventHandler(object sender, GetLeagueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeagueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeagueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void PlayNextCycleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPlayerByIDCompletedEventHandler(object sender, GetPlayerByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Player Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Player)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void buyPlayerCompletedEventHandler(object sender, buyPlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class buyPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal buyPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ChangeTeamFormationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ChangePlayerPositionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void MatchTeamsCompletedEventHandler(object sender, MatchTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MatchTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameStory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameStory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void dummyGetPaneltyCompletedEventHandler(object sender, dummyGetPaneltyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dummyGetPaneltyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dummyGetPaneltyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PaneltyEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PaneltyEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void dummyGetFreeKickCompletedEventHandler(object sender, dummyGetFreeKickCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dummyGetFreeKickCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dummyGetFreeKickCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FreeKickEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FreeKickEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void dummyGetFouledCompletedEventHandler(object sender, dummyGetFouledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dummyGetFouledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dummyGetFouledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FouledEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FouledEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void dummyGetScoreCompletedEventHandler(object sender, dummyGetScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dummyGetScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dummyGetScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScoreEvent Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScoreEvent)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void SaveStoryToDBCompletedEventHandler(object sender, SaveStoryToDBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveStoryToDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveStoryToDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ChangeTeamTrainngTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void TrainTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void TrainAllTeamsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetFormationsCompletedEventHandler(object sender, GetFormationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void TeamExistsCompletedEventHandler(object sender, TeamExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TeamExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TeamExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetAllCyclesCompletedEventHandler(object sender, GetAllCyclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCyclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCyclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetNumOfCyclesCompletedEventHandler(object sender, GetNumOfCyclesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumOfCyclesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumOfCyclesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGameStoryCompletedEventHandler(object sender, GetGameStoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameStoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameStoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameStory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameStory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetGameStory1CompletedEventHandler(object sender, GetGameStory1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameStory1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameStory1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GameStory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GameStory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UserExistsCompletedEventHandler(object sender, UserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPlayerNotForSellCompletedEventHandler(object sender, GetPlayerNotForSellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerNotForSellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerNotForSellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Player[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Player[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPlayerForSellCompletedEventHandler(object sender, GetPlayerForSellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerForSellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerForSellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Player[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Player[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetPlayerForSell1CompletedEventHandler(object sender, GetPlayerForSell1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlayerForSell1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlayerForSell1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CanISellPlayerCompletedEventHandler(object sender, CanISellPlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanISellPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanISellPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UpdateSellPlayerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateNewLeagueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteLeagueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void CreateComputerTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DoesComputerTeamExistCompletedEventHandler(object sender, DoesComputerTeamExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesComputerTeamExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesComputerTeamExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void DeleteComputerTeamCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591